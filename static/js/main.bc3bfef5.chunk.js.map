{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsConstants.js","redux/contacts/contactsReducers.js","redux/auth/authAction.js","redux/auth/authReducers.js","redux/store.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelector.js","redux/auth/authSelectors.js","components/Form/Form.js","components/Loader/Loader.js","components/ContactList/ContactList.js","pages/contacts/Contacts.js","redux/auth/authOperations.js","pages/registration/Registration.js","pages/login/Login.js","components/UserMenu/UserMenu.js","components/Header/AuthNav/AuthNav.js","components/Header/Navigation/Navigation.js","components/RoutesPubPriv/PrivateRoute.js","components/RoutesPubPriv/PublicRoute.js","App.js","index.js"],"names":["addContact","createAction","removeItem","filterItems","toggle","toggleLoader","setError","getContacts","items","createReducer","state","action","payload","filter","contact","id","hasNameInContacts","loader","error","combineReducers","authLoader","authError","registerSuccess","logoutSuccess","loginSuccess","currentUserSuccess","intialUserState","name","email","user","authAction","token","persistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReduser","auth","persistReducer","authReduser","persist","persistStore","axios","defaults","baseURL","contactsSelector","itemsSelector","filterSelector","FilteredItemsSelector","createSelector","filterValue","item","toLowerCase","includes","errorSelector","isNameSelector","isLoadingSelector","getAuth","getUserEmail","getUser","getToken","getLoader","Form","number","changeValue","target","value","setState","hasContact","props","some","cont","handleSubmit","e","preventDefault","this","onSubmit","className","type","placeholder","onChange","Component","mapDispatchToProps","dispatch","getState","a","url","method","data","headers","Authorization","res","console","log","connect","Loading","color","height","width","timeout","deleteContact","idContact","useEffect","Loader","TransitionGroup","component","map","CSSTransition","classNames","onClick","Contacts","isLoade","changeFilter","search","in","mountOnEnter","unmountOnExit","onEntered","length","INITIAL_STATE","password","Register","changeState","register","to","body","post","Login","login","userEmail","logout","Navigation","activeClassName","AuthNav","IsAuth","propsRoute","render","destricted","getCurrentUser","hasToken","useHistory","path","ReactDOM","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.bc3bfef5.chunk.js","sourcesContent":["import {\n  ADD,\n  REMOVE,\n  FILTER,\n  TOGGLE,\n  LOADER,\n  ERROR,\n  GET_CONTACTS,\n} from './contactsConstants';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction(ADD);\n\nexport const removeItem = createAction(REMOVE);\n\nexport const filterItems = createAction(FILTER);\n\nexport const toggle = createAction(TOGGLE);\nexport const toggleLoader = createAction(LOADER);\nexport const setError = createAction(ERROR);\nexport const getContacts = createAction(GET_CONTACTS);\n","export const ADD = 'contacnts/add';\nexport const REMOVE = 'contacts/romove';\nexport const FILTER = 'contacts/filter';\nexport const TOGGLE = 'contacts/toggle';\nexport const LOADER = 'contacts/loader'\nexport const ERROR = 'contacts/error'\nexport const GET_CONTACTS = 'contacts/getContacts'","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContact,\n  removeItem,\n  filterItems,\n  toggle,\n  toggleLoader,\n  setError,\n  getContacts,\n} from './contactsActions';\nconst items = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [removeItem]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload),\n  [getContacts]: (state, action) => action.payload,\n});\nconst filter = createReducer('', {\n  [filterItems]: (state, action) => action.payload,\n});\nconst hasNameInContacts = createReducer(false, {\n  [toggle]: (state, action) => action.payload,\n});\nconst loader = createReducer(false, {\n  [toggleLoader]: (state, action) => action.payload,\n});\nconst error = createReducer(false, {\n  [setError]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  hasNameInContacts,\n  loader,\n  error,\n});\n","import { createAction } from '@reduxjs/toolkit';\nconst authLoader = createAction('auth/loaderToggle');\nconst authError = createAction('auth/error');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst currentUserSuccess = createAction('auth/currentUserSuccess');\n\nexport default {\n  authLoader,\n  registerSuccess,\n  authError,\n  loginSuccess,\n  logoutSuccess,\n  currentUserSuccess,\n};\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport authAction from './authAction';\n\nconst intialUserState = {\n  name: '',\n  email: '',\n};\nconst user = createReducer(intialUserState, {\n  [authAction.registerSuccess]: (state, { payload }) => payload.user,\n  [authAction.loginSuccess]: (state, { payload }) => payload.user,\n  [authAction.logoutSuccess]: (state, { payload }) => ({ ...intialUserState }),\n  [authAction.currentUserSuccess]: (state, { payload }) => payload,\n});\nconst token = createReducer(null, {\n  [authAction.registerSuccess]: (state, { payload }) => payload.token,\n  [authAction.loginSuccess]: (state, { payload }) => payload.token,\n  [authAction.logoutSuccess]: (state, { payload }) => null,\n});\nconst loader = createReducer(false, {\n  [authAction.authLoader]: (state, { payload }) => payload,\n});\nconst error = createReducer(null, {\n  [authAction.authError]: (state, { payload }) => payload,\n});\nexport default combineReducers({\n  user,\n  token,\n  loader,\n  error,\n});\n","import {\n  configureStore\n} from '@reduxjs/toolkit';\nimport contactsReduser from './contacts/contactsReducers';\nimport authReduser from './auth/authReducers'\nimport {\n  persistStore,\n  persistReducer\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n}\n\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReduser,\n    auth: persistReducer(persistConfig, authReduser)\n  },\n});\nexport const persist = persistStore(store)","import axios from 'axios';\nimport {\n  addContact,\n  removeItem,\n  toggleLoader,\n  setError,\n  getContacts,\n} from './contactsActions';\n\n// {\n//       url: 'users/current',\n//       method: 'get',\n//       headers: {\n//         Authorization: `Bearer ${token}`,\n//       },\n// }\n\n// const url = 'https://goit-phonebook-api.herokuapp.com/';\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\nexport const addContactOperation = item => async (dispatch, getState) => {\n  const {\n    auth: {\n      token\n    },\n  } = getState();\n  try {\n    dispatch(toggleLoader(true));\n    const res = await axios({\n      url: 'contacts',\n      method: 'post',\n      data: item,\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(res);\n\n    dispatch(addContact(res.data));\n  } catch (error) {\n    setError(error);\n  } finally {\n    dispatch(toggleLoader(false));\n  }\n};\nexport const deleteContactOperation = (idContact) => async (dispatch, getState) => {\n  const {\n    auth: {\n      token\n    },\n  } = getState();\n  try {\n    dispatch(toggleLoader(true));\n    await axios({\n      url: `contacts/${idContact}`,\n      method: 'delete',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    dispatch(removeItem(idContact));\n  } catch (error) {\n    setError(error);\n  } finally {\n    dispatch(toggleLoader(false));\n  }\n};\nexport const getContactsOperation = () => async (dispatch, getState) => {\n  console.log(getState);\n\n  const {\n    auth: {\n      token\n    },\n  } = getState();\n  try {\n    dispatch(toggleLoader(true));\n    const res = await axios({\n      url: 'contacts',\n      method: 'get',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(res.data);\n    dispatch(getContacts(res.data));\n  } catch (error) {\n    setError(error);\n  } finally {\n    dispatch(toggleLoader(false));\n  }\n};","import { createSelector } from 'reselect';\nexport const contactsSelector = state => state.contacts;\nexport const itemsSelector = state => contactsSelector(state).items;\nexport const filterSelector = state => contactsSelector(state).filter;\nexport const FilteredItemsSelector = createSelector(\n  [itemsSelector, filterSelector],\n  (items, filterValue) =>\n    filterValue\n      ? items.filter(item => {\n          return item.name.toLowerCase().includes(filterValue.toLowerCase());\n        })\n      : items,\n);\nexport const errorSelector = state => contactsSelector(state).error;\nexport const isNameSelector = state =>\n  contactsSelector(state).hasNameInContacts;\nexport const isLoadingSelector = state => contactsSelector(state).loader;\n","export const getAuth = (state) => state.auth\nexport const getUser = (state) => getAuth(state).user\nexport const getUserEmail = (state) => getUser(state).email\nexport const getToken = (state) => getAuth(state).token\nexport const getLoader = (state) => getAuth(state).loader","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addContact, toggle } from '../../redux/contacts/contactsActions';\nimport { addContactOperation } from '../../redux/contacts/contactsOperations';\nimport {\n  itemsSelector,\n  isNameSelector,\n} from '../../redux/contacts/contactsSelector';\nimport { getToken } from '../../redux/auth/authSelectors';\nimport './Form.css';\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  changeValue = ({ target }) => {\n    const { value } = target;\n    const { name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  hasContact = name => {\n    const { contacts } = this.props;\n    return contacts.some(cont => cont.name === name);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const item = {\n      name,\n      number,\n    };\n    const hasNameIn = this.hasContact(item.name);\n    if (hasNameIn) {\n      this.props.toggle(true);\n      return;\n    }\n    this.props.addContact(item);\n    this.props.toggle(false);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <input\n          className=\"form-item\"\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          placeholder=\"Your name\"\n          onChange={this.changeValue}\n        />\n        <input\n          className=\"form-item\"\n          type=\"phone\"\n          placeholder=\"333-333-333\"\n          value={number}\n          name=\"number\"\n          onChange={this.changeValue}\n        />\n        <button className=\"form-btn\"> Add contact </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: itemsSelector(state),\n    hasNameInContacts: isNameSelector(state),\n    token: getToken(state),\n  };\n};\nconst mapDispatchToProps = {\n  addContact: addContactOperation,\n  toggle,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import Loader from 'react-loader-spinner';\nimport React from 'react';\n\nconst Loading = () => {\n  return (\n    <Loader\n      className=\"loader\"\n      type=\"ThreeDots\"\n      color=\"#FFFF00\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport {\n  getContactsOperation,\n  deleteContactOperation,\n} from '../../redux/contacts/contactsOperations';\nimport {\n  FilteredItemsSelector,\n  isLoadingSelector,\n} from '../../redux/contacts/contactsSelector';\nimport Loader from '../Loader/Loader';\nimport './ContactList.css';\nconst ContactList = ({ contacts, deleteContact, getContacts, loader }) => {\n  useEffect(() => {\n    getContacts();\n  }, []);\n  return (\n    <div className=\"contacts-wrapper\">\n      {loader && <Loader />}\n      {!loader && (\n        <TransitionGroup component=\"ul\" className=\"list\">\n          {contacts.map(({ name, number, id }) => {\n            return (\n              <CSSTransition key={id} classNames=\"change\" timeout={250}>\n                <li className=\"item\">\n                  <p className=\"list-name\"> {name} </p>\n                  <p className=\"list-phone\"> {number} </p>\n                  <button\n                    onClick={() => deleteContact(id)}\n                    className=\"list-btn\"\n                  >\n                    X\n                  </button>\n                </li>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: FilteredItemsSelector(state),\n    loader: isLoadingSelector(state),\n  };\n};\nconst mapDispatchToProps = {\n  deleteContact: deleteContactOperation,\n  getContacts: getContactsOperation,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport {\n  addContact,\n  toggle,\n  filterItems,\n} from '../../redux/contacts/contactsActions';\nimport Form from '../../components/Form/Form';\nimport ContactList from '../../components/ContactList/ContactList';\nimport './contacts.css';\nimport {\n  isLoadingSelector,\n  itemsSelector,\n  isNameSelector,\n  filterSelector,\n  errorSelector,\n} from '../../redux/contacts/contactsSelector';\n\nimport React, { Component } from 'react';\n\nclass Contacts extends Component {\n  state = {\n    isLoade: false,\n  };\n  changeFilter = e => {\n    this.props.filterItems(e.target.value);\n  };\n\n  render() {\n    const { isLoade } = this.state;\n    const {\n      contacts,\n      hasNameInContacts,\n      toggle,\n      search,\n      error,\n      loader,\n    } = this.props;\n    return (\n      <div className=\"phonebook-container\">\n        {!loader && !error && (\n          <>\n            <CSSTransition\n              classNames=\"phonebook\"\n              timeout={1500}\n              in={isLoade}\n              mountOnEnter\n            >\n              <div>\n                <h1> Phonebook </h1>\n              </div>\n            </CSSTransition>\n            <CSSTransition\n              in={hasNameInContacts}\n              classNames=\"alert\"\n              unmountOnExit\n              timeout={2500}\n              onEntered={() => toggle(false)}\n            >\n              <div className=\"alert-wrapper\">\n                <h1 className=\"alert-title\">\n                  This name is have already in contacts list\n                </h1>\n              </div>\n            </CSSTransition>\n          </>\n        )}\n        <Form />\n        <CSSTransition\n          in={contacts.length > 1}\n          unmountOnExit\n          classNames=\"search\"\n          timeout={250}\n        >\n          <label className=\"form-label\">\n            <p> Find contacts by name: </p>\n            <input\n              type=\"text\"\n              name=\"search\"\n              value={search}\n              onChange={this.changeFilter}\n            />\n          </label>\n        </CSSTransition>\n        <ContactList />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    contacts: itemsSelector(state),\n    hasNameInContacts: isNameSelector(state),\n    search: filterSelector(state),\n    loader: isLoadingSelector(state),\n    error: errorSelector(state),\n  };\n};\nconst mapDispatchToProps = {\n  addContact,\n  toggle,\n  filterItems,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import axios from 'axios';\nimport authAction from './authAction';\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\n// const token = {\n//   setToken(token) {\n//     console.log(token);\n\n//     return (axios.defaults.headers.common['Authorization'] = `Bearer ${token}`);\n//   },\n//   unsetToken() {\n//     return (axios.defaults.headers.common['Authorization'] = '');\n//   },\n// };\n\nexport const register = body => async dispatch => {\n  try {\n    dispatch(authAction.authLoader(true));\n    const res = await axios.post('users/signup', body);\n    // token.setToken(res.data.token);\n    dispatch(authAction.registerSuccess(res.data));\n  } catch (error) {\n    dispatch(authAction.authError(error));\n  } finally {\n    dispatch(authAction.authLoader(false));\n  }\n};\n\nexport const login = body => async dispatch => {\n  try {\n    dispatch(authAction.authLoader(true));\n    const res = await axios.post('users/login', body);\n    console.log(res.data.token);\n\n    // token.setToken(res.data.token);\n    dispatch(authAction.loginSuccess(res.data));\n  } catch (error) {\n    dispatch(authAction.authError(error));\n  } finally {\n    dispatch(authAction.authLoader(false));\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n    const {auth:{token}} = getState()\n  try {\n    dispatch(authAction.authLoader(true));\n    const res = await axios({\n      url: 'users/logout',\n      method: 'post',\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    // token.unsetToken();\n    dispatch(authAction.logoutSuccess());\n  } catch (error) {\n    dispatch(authAction.authError(error));\n  } finally {\n    dispatch(authAction.authLoader(false));\n  }\n};\n\nexport const getCurrentUser = token => async (dispatch, getState) => {\n  console.log(token);\n\n  const {\n    auth: { token: hasToken },\n  } = getState();\n  if (!hasToken) {\n    return;\n  }\n  console.log(hasToken);\n\n  try {\n    dispatch(authAction.authLoader(true));\n    const res = await axios({\n      url: 'users/current',\n      method: 'get',\n      headers: {\n        Authorization: `Bearer ${hasToken}`,\n      },\n    });\n\n    console.log(res);\n    // token.setToken(res.data.token);\n    dispatch(authAction.currentUserSuccess(res.data));\n  } catch (error) {\n    dispatch(authAction.authError(error));\n  } finally {\n    dispatch(authAction.authLoader(false));\n  }\n};\n","import React, {\n  Component\n} from 'react';\nimport {\n  connect\n} from 'react-redux';\nimport {\n  NavLink\n} from 'react-router-dom';\nimport {\n  register\n} from '../../redux/auth/authOperations';\nimport './Registration.css';\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\nclass Register extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n  changeState = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log({\n      ...this.state,\n    });\n    this.props.register({\n      ...this.state,\n    });\n    this.setState({\n      ...INITIAL_STATE,\n    });\n  };\n  render() {\n    const {\n      name,\n      email,\n      password\n    } = this.state;\n    return ( <\n      div className = 'reg-container' >\n      <\n      form onSubmit = {\n        this.handleSubmit\n      }\n      className = \"form\" >\n      <\n      p > Name: < /p>{' '} <\n      input className = \"form-item\"\n      type = \"text\"\n      name = \"name\"\n      value = {\n        name\n      }\n      onChange = {\n        this.changeState\n      }\n      />{' '} <\n      p > Email: < /p>{' '} <\n      input className = \"form-item\"\n      type = \"email\"\n      name = \"email\"\n      value = {\n        email\n      }\n      onChange = {\n        this.changeState\n      }\n      />{' '} <\n      p > Password: < /p>{' '} <\n      input className = \"form-item\"\n      type = \"password\"\n      name = \"password\"\n      value = {\n        password\n      }\n      onChange = {\n        this.changeState\n      }\n      />{' '} <\n      button className = \"form-btn\" > Signup < /button>{' '} <\n      p >\n      Do you have an account ? So you can < NavLink to = \"login\" > login < /NavLink>{' '} <\n      /p> <\n      /form> <\n      /div>\n    );\n  }\n}\n\nexport default connect(null, {\n  register,\n})(Register);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { login } from '../../redux/auth/authOperations';\nimport './Login.css';\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\nclass Login extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n  changeState = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.login({\n      ...this.state,\n    });\n    this.setState({\n      ...INITIAL_STATE,\n    });\n  };\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"reg-container\">\n        <form onSubmit={this.handleSubmit} className=\"form\">\n          <p> Email: </p>\n          <input\n            className=\"form-item\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.changeState}\n          />\n          <p> Password: </p>\n          <input\n            className=\"form-item\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.changeState}\n          />\n          <button className=\"form-btn\"> Login </button>\n          <p>\n            Do not you have any an account ? Please\n            <NavLink to=\"/register\"> Signup </NavLink> .\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\nexport default connect(null, {\n  login,\n})(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserEmail, getToken } from '../../redux/auth/authSelectors';\nimport { logout } from '../../redux/auth/authOperations';\nimport './UserMenu.css';\nconst UserMenu = ({ userEmail, logout, token }) => {\n  const onLogout = () => logout(token);\n  return (\n    <div className=\"user-wrapper\">\n      <p className=\"user-email\"> Email: {userEmail} </p>\n      <button className=\"user-btn\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    userEmail: getUserEmail(state),\n    token: getToken(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout,\n})(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navigation = () => {\n  return (\n    <ul className=\"nav-list\">\n      <li className=\"nav-item\">\n        <NavLink\n          to=\"/register\"\n          className=\"nav-link\"\n          activeClassName=\"nav-link-active\"\n        >\n          Signup\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink\n          to=\"login\"\n          className=\"nav-link\"\n          activeClassName=\"nav-link-active\"\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getToken, getLoader } from '../../../redux/auth/authSelectors';\nimport UserMenu from '../../UserMenu/UserMenu';\nimport AuthNav from '../AuthNav/AuthNav';\nimport './Navigation.css';\nconst Navigation = ({ token, loader }) => {\n  return (\n    <header className=\"header\">\n      {token && (\n        <nav>\n          <ul className=\"nav-list\">\n            <li className=\"nav-item\">\n              <NavLink\n                to=\"/contacts\"\n                className=\"nav-link\"\n                activeClassName=\"nav-link-active\"\n              >\n                Contacts\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      )}\n\n      {token && !loader ? <UserMenu /> : !loader && <AuthNav />}\n    </header>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    token: getToken(state),\n    loader: getLoader(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from '../../redux/auth/authSelectors';\nconst PrivateRoute = ({ IsAuth, Component, ...propsRoute }) => {\n  return (\n    <Route\n      {...propsRoute}\n      render={props => {\n        return IsAuth ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    IsAuth: getToken(state),\n  };\n};\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from '../../redux/auth/authSelectors';\nconst PublicRoute = ({ IsAuth, Component, destricted, ...propsRoute }) => {\n  return (\n    <Route\n      {...propsRoute}\n      render={props => {\n        return IsAuth && destricted ? (\n          <Redirect to=\"/contacts\" />\n        ) : (\n          <Component {...props} />\n        );\n      }}\n    />\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    IsAuth: getToken(state),\n  };\n};\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Contacts from './pages/contacts/Contacts';\nimport Register from './pages/registration/Registration';\nimport Login from './pages/login/Login';\nimport Navigation from './components/Header/Navigation/Navigation';\nimport { getToken } from './redux/auth/authSelectors';\nimport { getCurrentUser } from './redux/auth/authOperations';\nimport PrivateRoute from './components/RoutesPubPriv/PrivateRoute';\nimport PublicRoute from './components/RoutesPubPriv/PublicRoute';\n\nconst App = ({ token, getCurrentUser }) => {\n  const history = useHistory();\n  useEffect(() => {\n    getCurrentUser(token);\n  }, []);\n  // useEffect(() => {\n  //   if (token) {\n  //     history.push('contacts');\n  //   } else {\n  //     history.push('login');\n  //   }\n  // }, [token, history]);\n\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <PrivateRoute path=\"/contacts\" Component={Contacts} />\n        <PublicRoute path=\"/register\" destricted={true} Component={Register} />\n        <PublicRoute path=\"/login\" destricted={true} Component={Login} />\n      </Switch>\n    </>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    token: getToken(state),\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser,\n})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store, persist } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persist}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}